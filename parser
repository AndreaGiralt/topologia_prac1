#!/usr/bin/env python3
import argparse
from spiders.details import DetailSpider
from spiders.search import SearchSpider
from spiders.unemployment import UnemploymentSpider
from spiders.zones import ZonesSpider
from libs.csv import create_csv
from twisted.internet import reactor, defer
from scrapy.crawler import CrawlerRunner
from scrapy.utils.log import configure_logging


configure_logging()
runner = CrawlerRunner()

@defer.inlineCallbacks
def crawl(args):
    if args.all or args.zones:
        print("Importando zonas...")
        yield runner.crawl(ZonesSpider)

    if args.all or args.previews:
        print("Importando previsualizaciones...")
        yield runner.crawl(SearchSpider)

    if args.all or args.details:
        print("Importando detalles...")
        yield runner.crawl(DetailSpider)

    if args.all or args.unemployment:
        print("Importando información del paro...")
        yield runner.crawl(UnemploymentSpider)
    reactor.stop()

def main():

    parser = argparse.ArgumentParser(prog="parser",description='Scraper de la web pisos.com (Mallorca)')
    parser.add_argument('-a', '--all', help='Importa todo', action="store_true")
    parser.add_argument('-z','--zones', help='Importa las zonas de Mallorca.', action="store_true")
    parser.add_argument('-p','--previews', help='Importa datos básicos de los anuncios', action="store_true")
    parser.add_argument('-d','--details',help='Importa los detalles de los anuncios.', action="store_true")
    parser.add_argument('-u', '--unemployment', help='Importa el paro registrado por municipios.', action="store_true")
    parser.add_argument('-c','--csv', help='Crea un csv con los resultados.',action="store_true")

    args = parser.parse_args()

    if not any(vars(args).values()):
        parser.error('Es necesario indicar como mínimo una acción')

    if args.all or args.zones or args.previews or args.details or args.unemployment:
        crawl(args)
        reactor.run()

    if args.all or args.csv:
        print("Creando csv...")
        create_csv()

if __name__ == "__main__":
    main()